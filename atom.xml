<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WX&#39;sMajula</title>
  
  
  <link href="https://0922wx.github.io/atom.xml" rel="self"/>
  
  <link href="https://0922wx.github.io/"/>
  <updated>2024-10-17T14:55:50.119Z</updated>
  <id>https://0922wx.github.io/</id>
  
  <author>
    <name>王潇</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记一下vs插件</title>
    <link href="https://0922wx.github.io/2024/10/17/%E8%AE%B0%E4%B8%80%E4%B8%8Bvs%E6%8F%92%E4%BB%B6/"/>
    <id>https://0922wx.github.io/2024/10/17/%E8%AE%B0%E4%B8%80%E4%B8%8Bvs%E6%8F%92%E4%BB%B6/</id>
    <published>2024-10-17T14:46:51.000Z</published>
    <updated>2024-10-17T14:55:50.119Z</updated>
    
    <content type="html"><![CDATA[<p>12</p><ul><li>别名路径跳转</li><li>any-rule</li><li>Bearded Theme</li><li>CSS Modules</li><li>Error Lens</li><li>es6-string-html</li><li>ES7+ React/Redux/React-Native snippets</li><li>ESLint</li><li>Fitten Code: Faster and Better AI Assistant</li><li>GitLens — Git supercharged</li><li>HTML CSS Support</li><li>JS JSX Snippets</li><li>json</li><li>Less IntelliSense</li><li>Live Preview</li><li>Live Server</li><li>Move TS and JS - Move TypeScript/JS files and update relative imports<code>v1.</code></li><li>Native Debug</li><li>open in browser</li><li>Path Autocomplete</li><li>Path Intellisense</li><li>Prettier - Code formatter</li><li>Prisma</li><li>px to rem &amp; rpx &amp; vw (cssrem)</li><li>React</li><li>React Redux Toolkit RTK Query Snippets</li><li>Tailwind CSS IntelliSense</li><li>Thunder Client</li><li>Time Master</li><li>TypeScript Importer</li><li>vscode-icons</li><li>Three.JS Snippets</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;12&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;别名路径跳转&lt;/li&gt;
&lt;li&gt;any-rule&lt;/li&gt;
&lt;li&gt;Bearded Theme&lt;/li&gt;
&lt;li&gt;CSS Modules&lt;/li&gt;
&lt;li&gt;Error Lens&lt;/li&gt;
&lt;li&gt;es6-string-html&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    <category term="前端" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vscode" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/vscode/"/>
    
    
  </entry>
  
  <entry>
    <title>10-16折腾一下自动化部署</title>
    <link href="https://0922wx.github.io/2024/10/16/10-16%E6%8A%98%E8%85%BE%E4%B8%80%E4%B8%8B%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    <id>https://0922wx.github.io/2024/10/16/10-16%E6%8A%98%E8%85%BE%E4%B8%80%E4%B8%8B%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</id>
    <published>2024-10-16T07:43:10.000Z</published>
    <updated>2024-10-16T08:08:32.686Z</updated>
    
    <content type="html"><![CDATA[<p>没错，目前每次发表都需要手动编译再推送，还有一个缺点是hexo源码本身没有云端备份（虽然不知道到底有什么后果）。</p><p>听说引入<code>Github Action</code>工作流后就可以交给Github自动完成了</p><p>点开仓库的settings -&gt; Pages,找到Build and deployment下Source，换成Github Actions。提示使用jekyll，点击jekyll的Configure，自动生成他的actions，然后点击右上角commit changes，直接点击提交，就创建完毕了。</p><p>弄完了，那到底有什么区别呢</p><p>我不知道</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;没错，目前每次发表都需要手动编译再推送，还有一个缺点是hexo源码本身没有云端备份（虽然不知道到底有什么后果）。&lt;/p&gt;
&lt;p&gt;听说引入&lt;code&gt;Github Action&lt;/code&gt;工作流后就可以交给Github自动完成了&lt;/p&gt;
&lt;p&gt;点开仓库的settings -</summary>
      
    
    
    
    <category term="日常" scheme="https://0922wx.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="流水账" scheme="https://0922wx.github.io/categories/%E6%97%A5%E5%B8%B8/%E6%B5%81%E6%B0%B4%E8%B4%A6/"/>
    
    <category term="2024年" scheme="https://0922wx.github.io/categories/%E6%97%A5%E5%B8%B8/%E6%B5%81%E6%B0%B4%E8%B4%A6/2024%E5%B9%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>理灵文化</title>
    <link href="https://0922wx.github.io/2024/10/14/%E7%90%86%E7%81%B5%E6%96%87%E5%8C%96/"/>
    <id>https://0922wx.github.io/2024/10/14/%E7%90%86%E7%81%B5%E6%96%87%E5%8C%96/</id>
    <published>2024-10-14T08:36:42.000Z</published>
    <updated>2024-10-16T07:34:08.318Z</updated>
    
    <content type="html"><![CDATA[<h4 id="汗流浃背">汗流浃背</h4><h5 id="汗流浃背-v2">汗流浃背</h5><p>甚至不小心鸽了一个多小时</p><p>1.介绍js数组方法，数组遍历方法的相关区别</p><p>2.react常用hook</p><p>3.css居中</p><p>4.ts工具类型</p><p>5.== 和 === 区别</p><p>6.filter 和 find 区别</p><p>7.语义化标签用处，怎么用</p><p>8.interface和type区别</p><p>9.学习路线，怎么学习的，看谁的博客</p><p>10.<code>display:none</code>和<code>opacity: 0</code>的区别</p><p>11.严格模式会渲染两次吗</p><p>项目相关 (失忆完了)</p><p>五天内</p><h5 id="TS工具类型">TS工具类型</h5><p>一种在类型别名的基础上，基于泛型去动态创建新类型</p><p><code>Partial</code>：将所有类型设置为可选<code>Partial&lt;A&gt;</code></p><p><code>Required</code>:所有属性必选</p><p><code>readonly</code>：将属性标记为只读</p><p><code>Record</code>:声明属性名还未确定的接口类型</p><blockquote><p><code>Record&lt;K,T&gt;</code>构造具有给定类型<code>T</code>的一组属性<code>K</code>的类型。在将一个类型的属性映射到另一个类型的属性时，<code>Record</code>非常方便。</p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">UserProps</span> = <span class="string">&#x27;name&#x27;</span> | <span class="string">&#x27;job&#x27;</span> | <span class="string">&#x27;email&#x27;</span>;</span><br><span class="line"><span class="comment">// 等价于你一个个实现这些属性了</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">User</span> = <span class="title class_">Record</span>&lt;<span class="title class_">UserProps</span>, <span class="built_in">string</span>&gt;;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">user</span>: <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span>,</span><br><span class="line">  <span class="attr">job</span>: <span class="string">&#x27;fe-developer&#x27;</span>,</span><br><span class="line">  <span class="attr">email</span>: <span class="string">&#x27;john.doe@example.com&#x27;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>Pick</code>:接收一个对象类型，以及一个字面量类型组成的联合类型，这个联合类型只能是由对象类型的属性名组成的。它会对这个对象类型进行裁剪，只保留你传入的属性名组成的部分</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">email</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">phone</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 只提取其中的 name 与 age 信息</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UserBasicInfo</span> = <span class="title class_">Pick</span>&lt;<span class="title class_">User</span>, <span class="string">&#x27;name&#x27;</span> | <span class="string">&#x27;age&#x27;</span>&gt;;</span><br></pre></td></tr></table></figure><p><code>Omit</code>:就是 Pick 类型的另一面，它的入参和 Pick 类型一致，但效果却是相反的——它会移除传入的属性名的部分，只保留剩下的部分作为新的对象类型</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">User</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">email</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">phone</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 只移除 phone 属性</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UserWithoutPhone</span> = <span class="title class_">Omit</span>&lt;<span class="title class_">User</span>, <span class="string">&#x27;phone&#x27;</span>&gt;;</span><br></pre></td></tr></table></figure><p><code>Exclude</code> 和<code>Extract</code>:差集和交集</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">UserProps</span> = <span class="string">&#x27;name&#x27;</span> | <span class="string">&#x27;age&#x27;</span> | <span class="string">&#x27;email&#x27;</span> | <span class="string">&#x27;phone&#x27;</span> | <span class="string">&#x27;address&#x27;</span>;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">RequiredUserProps</span> = <span class="string">&#x27;name&#x27;</span> | <span class="string">&#x27;email&#x27;</span>;</span><br><span class="line"><span class="comment">// OptionalUserProps = UserProps - RequiredUserProps</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">OptionalUserProps</span> = <span class="title class_">Exclude</span>&lt;<span class="title class_">UserProps</span>, <span class="title class_">RequiredUserProps</span>&gt;;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">optionalUserProps</span>: <span class="title class_">OptionalUserProps</span> = <span class="string">&#x27;age&#x27;</span>; <span class="comment">// &#x27;age&#x27; | &#x27;phone&#x27; | &#x27;address&#x27;;</span></span><br></pre></td></tr></table></figure><p>Extract</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">UserProps</span> = <span class="string">&#x27;name&#x27;</span> | <span class="string">&#x27;age&#x27;</span> | <span class="string">&#x27;email&#x27;</span> | <span class="string">&#x27;phone&#x27;</span> | <span class="string">&#x27;address&#x27;</span>;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">RequiredUserProps</span> = <span class="string">&#x27;name&#x27;</span> | <span class="string">&#x27;email&#x27;</span>;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">RequiredUserPropsOnly</span> = <span class="title class_">Extract</span>&lt;<span class="title class_">UserProps</span>, <span class="title class_">RequiredUserProps</span>&gt;;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">requiredUserPropsOnly</span>: <span class="title class_">RequiredUserPropsOnly</span> = <span class="string">&#x27;name&#x27;</span>; <span class="comment">// &#x27;name&#x27; | &#x27;email&#x27;;</span></span><br></pre></td></tr></table></figure><h5 id="display-none-和-opacity-0二者的区别">display none 和 opacity 0二者的区别</h5><p><code>display:none</code></p><ul><li>完全隐藏HTML元素并从页面布局移除他，不会显示在页面上，也不会占据空间，不会响应任何交互事件</li></ul><p><code>opacity:0</code></p><ul><li>完全透明，但元素仍然存在于页面布局中，并保持原始大小和位置，但对用户来说不可见，仍然可以接收交互事件，包括键盘和屏幕阅读器事件。</li></ul><h6 id="无障碍性考虑">无障碍性考虑</h6><p><code>display:none</code>：</p><ul><li><strong>可见性</strong>：<code>display: none</code> 隐藏了元素，对于所有用户，包括屏幕阅读器用户，它都是不可见的。</li><li><strong>交互性</strong>：由于元素被隐藏，因此不会响应键盘或屏幕阅读器事件。这可能导致对于视力障碍者而言，无法访问其中的内容或功能。</li><li><strong>语义</strong>：如果使用 <code>display: none</code> 隐藏了某些重要内容，屏幕阅读器无法访问这些内容，因此会导致可访问性问题。</li></ul><p><code>opacity: 0</code>:</p><ul><li><strong>可见性</strong>：<code>opacity: 0</code> 使元素不可见，但仍然存在于页面布局中，因此对于视力障碍者来说，它是可见的（虽然不可见，但占据页面空间）。</li><li><strong>交互性</strong>：元素保持交互性，因此可以响应键盘和屏幕阅读器事件，使其内容和功能可访问。</li><li><strong>语义</strong>：使用 <code>opacity: 0</code> 可以确保屏幕阅读器能够访问元素的内容，以提供更好的可访问性。</li></ul><h6 id="额外">额外</h6><table><thead><tr><th></th><th><strong>display: none</strong></th><th><strong>visibility: hidden</strong></th><th style="text-align:center"><strong>opacity: 0</strong></th></tr></thead><tbody><tr><td><strong>是否占有空间</strong></td><td>×</td><td>√</td><td style="text-align:center">√</td></tr><tr><td><strong>是否可以进行DOM事件监听</strong></td><td>×</td><td>×</td><td style="text-align:center">√</td></tr><tr><td><strong>是否可以点击</strong></td><td>×</td><td>×</td><td style="text-align:center">√</td></tr><tr><td><strong>是否可以被子元素继承</strong></td><td>×</td><td>√</td><td style="text-align:center">√</td></tr><tr><td><strong>子元素能否通过改变属性值来改变继承自父亲的隐藏状态</strong></td><td>×</td><td>√</td><td style="text-align:center">×</td></tr></tbody></table><p><strong>visibility: hidden</strong>  是什么？</p><p><strong>display: none</strong>： 从这个世界消失了, 不存在了； <strong>opacity: 0</strong>： 视觉上隐身了, 看不见, 可以触摸得到； <strong>visibility: hidden</strong>： 视觉和物理上都隐身了, 看不见也摸不到, 但是存在的。</p><p>来源：<a href="https://juejin.cn/post/6844904202867572749">opacity: 0、visibility: hidden、display: none 优劣和适用场景，以及隐藏元素的几种方法 - 掘金 (juejin.cn)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;汗流浃背&quot;&gt;汗流浃背&lt;/h4&gt;
&lt;h5 id=&quot;汗流浃背-v2&quot;&gt;汗流浃背&lt;/h5&gt;
&lt;p&gt;甚至不小心鸽了一个多小时&lt;/p&gt;
&lt;p&gt;1.介绍js数组方法，数组遍历方法的相关区别&lt;/p&gt;
&lt;p&gt;2.react常用hook&lt;/p&gt;
&lt;p&gt;3.css居中&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="前端" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="面试" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>面试题</title>
    <link href="https://0922wx.github.io/2024/10/13/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>https://0922wx.github.io/2024/10/13/%E9%9D%A2%E8%AF%95%E9%A2%98/</id>
    <published>2024-10-13T06:47:49.000Z</published>
    <updated>2024-10-13T09:38:15.467Z</updated>
    
    <content type="html"><![CDATA[<h5 id="script标签里的async和defer有什么区别？">script标签里的async和defer有什么区别？</h5><p>没有async和defer时：</p><ul><li>浏览器立即加载并执行指定的脚本</li></ul><p>有async：</p><ul><li>加载和渲染后面元素的过程将和script的<strong>加载和执行并行进行</strong>(异)</li></ul><p>有defer:</p><ul><li>加载和渲染后面元素的过程将和script的<strong>加载并行进行</strong>，<strong>要等所有元素解析完成之后才会执行</strong>(异)</li></ul><p>创造的时间节点，defer比async早，defer保证脚本顺序，async不会，谁先下载好就加载谁</p><h5 id="setTimeout最小执行时间">setTimeout最小执行时间</h5><p><code>setTimeout</code>：4ms</p><p><code>setInterval</code>：10ms，小于10ms就会被调整到10ms</p><p>为什么是这两个数字？ ——&gt; htlm5就是这么规定的</p><h5 id="DOM树和渲染树区别">DOM树和渲染树区别</h5><p>DOM树和HTML标签一一对应，包括head和隐藏元素</p><p>渲染树是不包含head和隐藏元素</p><h5 id="git解决冲突">git解决冲突</h5><p>比如：</p><ol><li>两个分支修改同一个文件</li><li>两个分支修改同一个文件的名字</li></ol><p>解决：</p><ol><li>当前分支上直接修改代码 add commit</li><li>本地当前分支上修改冲突 add commit push</li></ol><h5 id="redux核心原理">redux核心原理</h5><p>核心组成三部分：</p><ul><li>Store</li><li>Action</li><li>Reducer：一个函数，接收两个参数，action和当前state</li></ul><p>整个工作流程，数据流严格单向，只能通过dispatch action的方式触发数据状态的修改</p><p>Action进入对于Reducer进行处理最终得到新的状态State，再进一步触发Vaiew的数据更新</p><h5 id="HashRouter和BrowserRouter区别">HashRouter和BrowserRouter区别</h5><p>HashRouter：</p><ul><li>基于hash模式，跳转原理是使用了location.hash、location.replace在域名后，先拼接 /#，再拼接路径，也就是利用锚点，实现路由的跳转。如：<a href="http://www.dzm.com/?spm=a2c6h.13046898.publish-article.5.69536ffatf0FOn#/xx">http://www.dzm.com/#/xx</a></li></ul><p>BrowserRouter：</p><ul><li>基于history模式，原理是了 HTML5 为浏览器全局的 history 对象新增了两个 API，包括 history.pushState、history.replaceState</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;script标签里的async和defer有什么区别？&quot;&gt;script标签里的async和defer有什么区别？&lt;/h5&gt;
&lt;p&gt;没有async和defer时：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浏览器立即加载并执行指定的脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有async：&lt;</summary>
      
    
    
    
    <category term="前端" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="面试题" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>10-13</title>
    <link href="https://0922wx.github.io/2024/10/13/10-13/"/>
    <id>https://0922wx.github.io/2024/10/13/10-13/</id>
    <published>2024-10-13T03:08:47.000Z</published>
    <updated>2024-10-13T03:10:08.773Z</updated>
    
    <content type="html"><![CDATA[<p>123</p><p>北海牧场浓醇凝酪</p><p>豪赤</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;123&lt;/p&gt;
&lt;p&gt;北海牧场浓醇凝酪&lt;/p&gt;
&lt;p&gt;豪赤&lt;/p&gt;
</summary>
      
    
    
    
    <category term="日常" scheme="https://0922wx.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="流水账" scheme="https://0922wx.github.io/categories/%E6%97%A5%E5%B8%B8/%E6%B5%81%E6%B0%B4%E8%B4%A6/"/>
    
    <category term="2024年" scheme="https://0922wx.github.io/categories/%E6%97%A5%E5%B8%B8/%E6%B5%81%E6%B0%B4%E8%B4%A6/2024%E5%B9%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>FirstofArray</title>
    <link href="https://0922wx.github.io/2024/10/11/FirstofArray/"/>
    <id>https://0922wx.github.io/2024/10/11/FirstofArray/</id>
    <published>2024-10-11T14:30:02.000Z</published>
    <updated>2024-10-11T14:34:40.827Z</updated>
    
    <content type="html"><![CDATA[<p>实现一个<code>First&lt;T&gt;</code>泛型，它接受一个数组<code>T</code>并返回它的第一个元素的类型。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> arr1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"><span class="keyword">type</span> arr2 = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br><span class="line"><span class="keyword">type</span> head1 = <span class="title class_">First</span>&lt;arr1&gt; <span class="comment">// 应推导出 &#x27;a&#x27;</span></span><br><span class="line"><span class="keyword">type</span> head2 = <span class="title class_">First</span>&lt;arr2&gt; <span class="comment">// 应推导出 3</span></span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ============= Test Cases =============</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; <span class="title class_">Equal</span>, <span class="title class_">Expect</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./test-utils&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> cases = [</span><br><span class="line">  <span class="title class_">Expect</span>&lt;<span class="title class_">Equal</span>&lt;<span class="title class_">First</span>&lt;[<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]&gt;, <span class="number">3</span>&gt;&gt;,</span><br><span class="line">  <span class="title class_">Expect</span>&lt;<span class="title class_">Equal</span>&lt;<span class="title class_">First</span>&lt;[<span class="function">() =&gt;</span> <span class="number">123</span>, &#123; <span class="attr">a</span>: <span class="built_in">string</span> &#125;]&gt;, <span class="function">() =&gt;</span> <span class="number">123</span>&gt;&gt;,</span><br><span class="line">  <span class="title class_">Expect</span>&lt;<span class="title class_">Equal</span>&lt;<span class="title class_">First</span>&lt;[]&gt;, <span class="built_in">never</span>&gt;&gt;,</span><br><span class="line">  <span class="title class_">Expect</span>&lt;<span class="title class_">Equal</span>&lt;<span class="title class_">First</span>&lt;[<span class="literal">undefined</span>]&gt;, <span class="literal">undefined</span>&gt;&gt;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> errors = [</span><br><span class="line">  <span class="comment">// @ts-expect-error</span></span><br><span class="line">  <span class="title class_">First</span>&lt;<span class="string">&#x27;notArray&#x27;</span>&gt;,</span><br><span class="line">  <span class="comment">// @ts-expect-error</span></span><br><span class="line">  <span class="title class_">First</span>&lt;&#123; <span class="number">0</span>: <span class="string">&#x27;arrayLike&#x27;</span> &#125;&gt;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">// ============= Your Code Here =============</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">First</span>&lt;T <span class="keyword">extends</span> <span class="built_in">any</span>[]&gt; = </span><br></pre></td></tr></table></figure><h5 id="what-can-i-say">what can i say?</h5><p>毫无头绪捏</p><p><code>type First&lt;T extends any[]&gt; = T extends [infer F, ...any[]] ? F : never;</code></p><p>通过条件类型提取数组的第一个元素 <code>F</code>。<code>[infer F, ...any[]]</code> 表示一个数组，<code>F</code> 是第一个元素，<code>...any[]</code> 表示剩余的元素可以是任意类型。</p><p>我怎么感觉好像没看过这种东西</p><p>什么遍历 infer，完全找不到地方看</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;实现一个&lt;code&gt;First&amp;lt;T&amp;gt;&lt;/code&gt;泛型，它接受一个数组&lt;code&gt;T&lt;/code&gt;并返回它的第一个元素的类型。&lt;/p&gt;
&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt</summary>
      
    
    
    
    <category term="TS类型体操" scheme="https://0922wx.github.io/categories/TS%E7%B1%BB%E5%9E%8B%E4%BD%93%E6%93%8D/"/>
    
    <category term="简单题" scheme="https://0922wx.github.io/categories/TS%E7%B1%BB%E5%9E%8B%E4%BD%93%E6%93%8D/%E7%AE%80%E5%8D%95%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>Object.key,value和entries</title>
    <link href="https://0922wx.github.io/2024/10/11/Object-key-value%E5%92%8Centries/"/>
    <id>https://0922wx.github.io/2024/10/11/Object-key-value%E5%92%8Centries/</id>
    <published>2024-10-11T12:57:37.000Z</published>
    <updated>2024-10-11T13:08:28.530Z</updated>
    
    <content type="html"><![CDATA[<p>key和value，键值对罢了</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(&#123;<span class="attr">name</span>:<span class="string">&quot;tom&quot;</span>,<span class="attr">age</span>:<span class="number">11</span>&#125;); <span class="comment">// [&quot;name&quot;,&quot;age&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">values</span>(&#123;<span class="attr">name</span>:<span class="string">&quot;tom&quot;</span>,<span class="attr">age</span>:<span class="number">11</span>&#125;) <span class="comment">// [&#x27;tom&#x27;,11]</span></span><br></pre></td></tr></table></figure><p>主要是记录一下entries()</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">entries</span>(&#123;<span class="attr">name</span>:<span class="string">&quot;tom&quot;</span>,<span class="attr">age</span>:<span class="number">11</span>&#125;)<span class="comment">//[Array(2),Arrar(2)]</span></span><br></pre></td></tr></table></figure><p>我去，二维数组</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">entries</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])<span class="comment">//[Array(2),Arrar(2),Arrar(2)]</span></span><br></pre></td></tr></table></figure><p>手工返回键值对组成的数组，第一个元素是属性的键（始终是字符串），第二个元素是属性值。</p><p>那么绝配map了</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">foo</span>: <span class="string">&quot;bar&quot;</span>, <span class="attr">baz</span>: <span class="number">42</span> &#125;;</span><br><span class="line"><span class="keyword">const</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>(<span class="title class_">Object</span>.<span class="title function_">entries</span>(obj));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(map); <span class="comment">// 输出: Map(2) &#123;&quot;foo&quot; =&gt; &quot;bar&quot;, &quot;baz&quot; =&gt; 42&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;key和value，键值对罢了&lt;/p&gt;
&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="前端" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Js有的没的" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/Js%E6%9C%89%E7%9A%84%E6%B2%A1%E7%9A%84/"/>
    
    
  </entry>
  
  <entry>
    <title>神秘小厂</title>
    <link href="https://0922wx.github.io/2024/10/10/%E7%A5%9E%E7%A7%98%E5%B0%8F%E5%8E%82/"/>
    <id>https://0922wx.github.io/2024/10/10/%E7%A5%9E%E7%A7%98%E5%B0%8F%E5%8E%82/</id>
    <published>2024-10-10T11:51:17.000Z</published>
    <updated>2024-10-10T12:01:25.695Z</updated>
    
    <content type="html"><![CDATA[<h5 id="面面相觑">面面相觑</h5><p>1.vue的生命周期(没用过vue)</p><p>2.小程序做过吗(没有)</p><p>3.css2和css3有什么区别</p><p>4.怎么水平居中</p><p>5.es6新增了什么</p><p>6.==和===的区别</p><p>7.react怎么父传子</p><p>8.聊天室用了什么技术聊天(websocket)</p><p>反问:</p><p>主要用vue，原生小程序开发</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;面面相觑&quot;&gt;面面相觑&lt;/h5&gt;
&lt;p&gt;1.vue的生命周期(没用过vue)&lt;/p&gt;
&lt;p&gt;2.小程序做过吗(没有)&lt;/p&gt;
&lt;p&gt;3.css2和css3有什么区别&lt;/p&gt;
&lt;p&gt;4.怎么水平居中&lt;/p&gt;
&lt;p&gt;5.es6新增了什么&lt;/p&gt;
&lt;p&gt;6.==和===的</summary>
      
    
    
    
    <category term="前端" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="面试" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>ThreeJs一些概念</title>
    <link href="https://0922wx.github.io/2024/10/09/ThreeJs/"/>
    <id>https://0922wx.github.io/2024/10/09/ThreeJs/</id>
    <published>2024-10-09T10:40:57.000Z</published>
    <updated>2024-10-13T13:28:34.072Z</updated>
    
    <content type="html"><![CDATA[<h5 id="三要素">三要素</h5><ol><li>场景 Scene       容器</li><li>相机 Camera    观察</li><li>渲染器 Render   组合</li></ol><h5 id="起步">起步</h5><p>随便找一个文件夹.<code>yarn init</code>,然后在设置里面写:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vite&quot;</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>然后<code>yarn add -D vite</code></p><p><code>yarn add -D three</code></p><p>OK</p><p>始于此</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建场景-&gt;创建相机-&gt;创建渲染器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&quot;three&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="number">45</span>,<span class="variable language_">window</span>.<span class="property">innerWidth</span>/<span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="number">0.1</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="number">1000</span></span></span><br><span class="line"><span class="language-javascript">        )</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>东西都有了，那要怎么才能看到呢？</p><p><code>document.body.appendChild(renderer.domElement);</code></p><p>获取camera元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建相机</span></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(<span class="number">45</span>, <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>, <span class="number">0.1</span>, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置相机位置</span></span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">3</span></span><br><span class="line">camera.<span class="property">position</span>.<span class="property">y</span> = <span class="number">2</span></span><br><span class="line">camera.<span class="title function_">lookAt</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建渲染器</span></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>();</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cube = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(</span><br><span class="line"><span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BoxGeometry</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line"><span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>()</span><br><span class="line">)</span><br><span class="line">scene.<span class="title function_">add</span>(cube)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">requestAnimationFrame</span>(animate);</span><br><span class="line">cube.<span class="property">rotation</span>.<span class="property">x</span> += <span class="number">0.01</span>;</span><br><span class="line">cube.<span class="property">rotation</span>.<span class="property">y</span> += <span class="number">0.01</span>;</span><br><span class="line">renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">animate</span>();</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;三要素&quot;&gt;三要素&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;场景 Scene       容器&lt;/li&gt;
&lt;li&gt;相机 Camera    观察&lt;/li&gt;
&lt;li&gt;渲染器 Render   组合&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&quot;起步&quot;&gt;起步&lt;/h5&gt;
&lt;p&gt;随便找一个文件</summary>
      
    
    
    
    <category term="前端" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="ThreeJs" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/ThreeJs/"/>
    
    <category term="事前准备" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/ThreeJs/%E4%BA%8B%E5%89%8D%E5%87%86%E5%A4%87/"/>
    
    
  </entry>
  
  <entry>
    <title>自留按钮动画</title>
    <link href="https://0922wx.github.io/2024/10/09/%E8%87%AA%E7%95%99%E6%8C%89%E9%92%AE%E5%8A%A8%E7%94%BB/"/>
    <id>https://0922wx.github.io/2024/10/09/%E8%87%AA%E7%95%99%E6%8C%89%E9%92%AE%E5%8A%A8%E7%94%BB/</id>
    <published>2024-10-09T07:58:15.000Z</published>
    <updated>2024-10-09T08:17:52.202Z</updated>
    
    <content type="html"><![CDATA[<h5 id="十字形劈开">十字形劈开</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">4rem</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f2f2f2</span>;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">1s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#262626</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>);</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">1s</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">0deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#262626</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>);</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">1s</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>十字形黑到白,原理是通过旋转x和y轴得到</strong></p><h5 id="自上而下倒塌">自上而下倒塌</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.roate</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">background-color</span>: inherit;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.roate</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: yellowgreen;</span><br><span class="line">    <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">transform-origin</span>: bottom left;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">90deg</span>);</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">1s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.roate</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>原理是before里画一团颜色，用transform旋转让他塌下来</strong></p><h5 id="填充">填充</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn2</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">background-color</span>: inherit;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">color</span>: burlywood;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">1.5s</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn2</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: burlywood;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">transform-origin</span>: left;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">1s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn2</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn2</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="悬浮放大">悬浮放大</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">background-color</span>: inherit;</span><br><span class="line">    <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">1.5s</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.25rem</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid black;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">900</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">5px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;十字形劈开&quot;&gt;十字形劈开&lt;/h5&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;</summary>
      
    
    
    
    <category term="前端" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="css" scheme="https://0922wx.github.io/categories/%E5%89%8D%E7%AB%AF/css/"/>
    
    
  </entry>
  
  <entry>
    <title>计数排序</title>
    <link href="https://0922wx.github.io/2024/10/08/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F/"/>
    <id>https://0922wx.github.io/2024/10/08/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F/</id>
    <published>2024-10-08T12:01:06.000Z</published>
    <updated>2024-10-08T12:01:55.187Z</updated>
    
    <content type="html"><![CDATA[<h5 id="第一眼">第一眼</h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">countingSort</span>(<span class="params"><span class="attr">arr</span>: <span class="built_in">number</span>[]</span>): <span class="built_in">number</span>[] &#123;</span><br><span class="line">    <span class="comment">// Write your code here</span></span><br><span class="line">    <span class="keyword">let</span> <span class="attr">len</span>:<span class="built_in">number</span> = arr.<span class="property">length</span></span><br><span class="line">    <span class="keyword">const</span> <span class="attr">newArr</span>:<span class="built_in">number</span>[] = <span class="keyword">new</span> <span class="title class_">Array</span>(len).<span class="title function_">fill</span>(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i =<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i])&#123;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后尬住了</p><p>拿到arr长度len</p><p><s>开辟长度为len的数组，并填充0</s></p><p><s>const newArr:number[] = new Array(len).fill(0)</s></p><h5 id="第二眼">第二眼</h5><p><strong>要求按arr最大值来定义数组长度，比如[1,1,3,2,1]的范围是[0…3],所以开辟res =[0,0,0,0]</strong></p><p>所以得拿到最大值?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const max = arr.find(...)</span><br></pre></td></tr></table></figure><p>find只能返回符合条件的第一个元素，不能找最大值</p><h6 id="解构找到最大值">解构找到最大值</h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> max = <span class="title class_">Math</span>.<span class="title function_">max</span>(...arr)</span><br></pre></td></tr></table></figure><h6 id="reduce找到最大值">reduce找到最大值</h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> max =arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc,item</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">max</span>(acc,item)</span><br><span class="line">&#125;,arr[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>acc当前最大值,item遍历元素</p><p><strong>当然，acc是reduce原本就是接收的4个参数之一,还有个可选的initialValue</strong></p><ol><li>Accumulator acc(累加器)</li><li>Current Value cur(当前值)</li><li>Current index idx(当前索引)</li><li>Source Array src(源数组)</li></ol><p>遍历arr</p><p>如果出现值，在特定位置计数加1</p><p>arr[i] newArr[i] ++</p><h5 id="第三眼">第三眼</h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">countingSort</span>(<span class="params"><span class="attr">arr</span>: <span class="built_in">number</span>[]</span>): <span class="built_in">number</span>[] &#123;</span><br><span class="line">    <span class="comment">// Write your code here</span></span><br><span class="line">    <span class="keyword">let</span> <span class="attr">len</span>:<span class="built_in">number</span> = arr.<span class="property">length</span></span><br><span class="line">   <span class="keyword">const</span> max = <span class="title class_">Math</span>.<span class="title function_">max</span>(...arr)</span><br><span class="line">   <span class="keyword">const</span> newArr = <span class="title class_">Array</span>(max).<span class="title function_">fill</span>(<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">       </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相同数值再出现,再相同位置+1</p><p><strong>有错</strong></p><p>并非<code> const newArr = Array(max).fill(0)</code></p><p>而是<code> const newArr = Array(max + 1).fill(0)</code></p><p>为什么？</p><p>因为要创建[0,max]全闭数组</p><h5 id="第四眼">第四眼</h5><p>到底怎么计算元素出现次数?</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> num <span class="keyword">of</span> arr)&#123;</span><br><span class="line">     newArr[num]++</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通过遍历输入数组 <code>arr</code> 中的每个数字 <code>num</code>，我们给 <code>countArr[num]</code> 这个位置的值加 1。</li><li>例如，如果输入数组是<code>[2, 3, 2, 1]</code>，则newArr将变为<code>[0, 1, 2, 1]</code><ul><li><code>countArr[1] = 1</code> （数字 1 出现 1 次）</li><li><code>countArr[2] = 2</code> （数字 2 出现 2 次）</li><li><code>countArr[3] = 1</code> （数字 3 出现 1 次）</li></ul></li></ul><p>寄了</p><h5 id="第五眼">第五眼</h5><p>看看洋人怎么写的</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> frequencyArray = (<span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">100</span>)).<span class="title function_">fill</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">const</span> length = arr.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        frequencyArray[arr[i]] += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> frequencyArray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code> frequencyArray[arr[i]] += 1;</code>疑似有点天才了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;第一眼&quot;&gt;第一眼&lt;/h5&gt;
&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="HackerRank三个月挑战" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/"/>
    
    <category term="第二周" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/%E7%AC%AC%E4%BA%8C%E5%91%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>前言</title>
    <link href="https://0922wx.github.io/2024/10/07/%E5%89%8D%E8%A8%80/"/>
    <id>https://0922wx.github.io/2024/10/07/%E5%89%8D%E8%A8%80/</id>
    <published>2024-10-07T14:55:01.000Z</published>
    <updated>2024-10-07T15:16:17.697Z</updated>
    
    <content type="html"><![CDATA[<h5 id="好好的力扣题不做，跑去刷洋人的题？">好好的力扣题不做，跑去刷洋人的题？</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;好好的力扣题不做，跑去刷洋人的题？&quot;&gt;好好的力扣题不做，跑去刷洋人的题？&lt;/h5&gt;
</summary>
      
    
    
    
    <category term="HackerRank三个月挑战" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/"/>
    
    
  </entry>
  
  <entry>
    <title>10-7</title>
    <link href="https://0922wx.github.io/2024/10/07/10-7/"/>
    <id>https://0922wx.github.io/2024/10/07/10-7/</id>
    <published>2024-10-07T14:20:19.000Z</published>
    <updated>2024-10-07T14:23:25.077Z</updated>
    
    <content type="html"><![CDATA[<p>234234</p><p>这个<strong>简爱 鲜奶米布丁</strong></p><p>豪赤!🤓👍</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;234234&lt;/p&gt;
&lt;p&gt;这个&lt;strong&gt;简爱 鲜奶米布丁&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;豪赤!🤓👍&lt;/p&gt;
</summary>
      
    
    
    
    <category term="日常" scheme="https://0922wx.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="流水账" scheme="https://0922wx.github.io/categories/%E6%97%A5%E5%B8%B8/%E6%B5%81%E6%B0%B4%E8%B4%A6/"/>
    
    <category term="2024年" scheme="https://0922wx.github.io/categories/%E6%97%A5%E5%B8%B8/%E6%B5%81%E6%B0%B4%E8%B4%A6/2024%E5%B9%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>Diagonal Difference对角线差</title>
    <link href="https://0922wx.github.io/2024/10/07/Diagonal-Difference/"/>
    <id>https://0922wx.github.io/2024/10/07/Diagonal-Difference/</id>
    <published>2024-10-07T12:38:13.000Z</published>
    <updated>2024-10-07T12:56:06.214Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.hackerrank.com/challenges/three-month-preparation-kit-diagonal-difference/problem?h_l=interview&amp;isFullScreen=true&amp;playlist_slugs%5B%5D%5B%5D=preparation-kits&amp;playlist_slugs%5B%5D%5B%5D=three-month-preparation-kit&amp;playlist_slugs%5B%5D%5B%5D=three-month-week-two">Diagonal Difference | HackerRank</a></p><p>计算矩阵的对角线差</p><p>力扣有道求对角线和</p><p><a href="https://leetcode.cn/problems/matrix-diagonal-sum/description/">1572. 矩阵对角线元素的和 - 力扣（LeetCode）</a></p><p>只要你知道两边的对角线怎么求，一切都会好起来的</p><p>左边的对角线就<code>arr[i][i]</code>,右边的的是<code>arr[i][length-1-i]</code></p><p>HackerRank让你求的是左右对角线的差的绝对值</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">diagonalDifference</span>(<span class="params"><span class="attr">arr</span>: <span class="built_in">number</span>[][]</span>): <span class="built_in">number</span> &#123;</span><br><span class="line">    <span class="comment">// Write your code here</span></span><br><span class="line">    <span class="keyword">const</span> length = arr.<span class="property">length</span></span><br><span class="line">     <span class="keyword">let</span> primarySum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> secondarySum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        primarySum += arr[i][i];</span><br><span class="line">        secondarySum += arr[i][length - <span class="number">1</span> - i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">abs</span>(primarySum - secondarySum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>遍历途中记录就行了</p><p>力扣的是求和，还需要关心到元素项是不是偶数，(说起来求差不用关心吗)：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> diagonalSum = <span class="keyword">function</span>(<span class="params">mat</span>) &#123;</span><br><span class="line"> <span class="keyword">const</span> length = mat.<span class="property">length</span></span><br><span class="line">    <span class="keyword">const</span> mid = <span class="title class_">Math</span>.<span class="title function_">floor</span>(length / <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">let</span> sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        sum += mat[i][i] + mat[i][length - <span class="number">1</span> - i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum - mat[mid][mid] * (length &amp; <span class="number">1</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>return sum - mat[mid][mid] * (length &amp; 1)</code> 检查是否是奇数，如果是奇数，即中间元素被计算了两次，所以要减一次中心元素值</p><p>为什么会重复计算？</p><p>因为奇数项的话，会有一个中心值</p><blockquote><p>1 2 3</p><p>4 5 6</p><p>7 8 9</p></blockquote><blockquote><p>第一轮</p><p>1+3  sum=4</p><p>5+5  sum=4+10 =14 这里算了两次</p><p>9+7 sum=14+16 = 30</p></blockquote><p><code>length &amp; 1</code>  &amp;与 两个位都为1时，结果才为1</p><p>如果<code>length</code>是偶数，那他二进制最后一位就是0，相反就是1</p><h5 id="那为什么求差就不用考虑奇偶呢">那为什么求差就不用考虑奇偶呢</h5><p>因为是求差，相同的早变成0了，没有的东西就不用考虑了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.hackerrank.com/challenges/three-month-preparation-kit-diagonal-difference/problem?h_l=interview&amp;amp;isFullScreen=tru</summary>
      
    
    
    
    <category term="HackerRank三个月挑战" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/"/>
    
    <category term="第二周" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/%E7%AC%AC%E4%BA%8C%E5%91%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>Flipping bits</title>
    <link href="https://0922wx.github.io/2024/10/07/Flipping-bits/"/>
    <id>https://0922wx.github.io/2024/10/07/Flipping-bits/</id>
    <published>2024-10-07T12:35:16.000Z</published>
    <updated>2024-10-07T12:37:35.306Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.hackerrank.com/challenges/three-month-preparation-kit-flipping-bits/problem?h_l=interview&amp;isFullScreen=true&amp;playlist_slugs%5B%5D%5B%5D=preparation-kits&amp;playlist_slugs%5B%5D%5B%5D=three-month-preparation-kit&amp;playlist_slugs%5B%5D%5B%5D=three-month-week-two">Flipping bits | HackerRank</a></p><p>给你一个32-bits位无符号整数的列表，要求你输出你把它们中每个数二进制表示中的每位翻转之后的结果得到的新列表（即0变成1，1变成0）。</p><p><strong>属于是知道js有左移右移就能秒了</strong></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Right_shift">右移（&gt;&gt;） - JavaScript | MDN (mozilla.org)</a></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">flippingBits</span>(<span class="params"><span class="attr">n</span>: <span class="built_in">number</span></span>): <span class="built_in">number</span> &#123;</span><br><span class="line">    <span class="comment">// Write your code here</span></span><br><span class="line">        <span class="keyword">return</span> ~n &gt;&gt;&gt; <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>翻译：按位取反并无符号右移32位</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.hackerrank.com/challenges/three-month-preparation-kit-flipping-bits/problem?h_l=interview&amp;amp;isFullScreen=true&amp;amp;</summary>
      
    
    
    
    <category term="HackerRank三个月挑战" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/"/>
    
    <category term="第二周" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/%E7%AC%AC%E4%BA%8C%E5%91%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>Grading Students</title>
    <link href="https://0922wx.github.io/2024/10/07/Grading-Students/"/>
    <id>https://0922wx.github.io/2024/10/07/Grading-Students/</id>
    <published>2024-10-07T07:16:53.000Z</published>
    <updated>2024-10-07T12:34:31.508Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.hackerrank.com/challenges/three-month-preparation-kit-grading/problem?h_l=interview&amp;isFullScreen=true&amp;playlist_slugs%5B%5D%5B%5D=preparation-kits&amp;playlist_slugs%5B%5D%5B%5D=three-month-preparation-kit&amp;playlist_slugs%5B%5D%5B%5D=three-month-week-two">Grading Students | HackerRank</a></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">gradingStudents</span>(<span class="params"><span class="attr">grades</span>: <span class="built_in">number</span>[]</span>): <span class="built_in">number</span>[] &#123;</span><br><span class="line">    <span class="comment">// Write your code here</span></span><br><span class="line">    <span class="keyword">return</span> grades.<span class="title function_">map</span>(<span class="function"><span class="params">grades</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (grades &lt; <span class="number">38</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> grades</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> <span class="attr">currentGrades</span>: <span class="built_in">number</span> = grades</span><br><span class="line">        <span class="keyword">const</span> nextFive = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(grades / <span class="number">5</span>) * <span class="number">5</span></span><br><span class="line">        <span class="keyword">if</span> (nextFive - currentGrades &lt;<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> nextFive</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> currentGrades</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>map方法遍历数组，为其每项执行回调函数，返回新数组</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.hackerrank.com/challenges/three-month-preparation-kit-grading/problem?h_l=interview&amp;amp;isFullScreen=true&amp;amp;playli</summary>
      
    
    
    
    <category term="HackerRank三个月挑战" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/"/>
    
    <category term="第二周" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/%E7%AC%AC%E4%BA%8C%E5%91%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>Breaking the Records</title>
    <link href="https://0922wx.github.io/2024/10/07/Breaking-the-Records/"/>
    <id>https://0922wx.github.io/2024/10/07/Breaking-the-Records/</id>
    <published>2024-10-07T07:15:11.000Z</published>
    <updated>2024-10-07T07:16:16.101Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.hackerrank.com/challenges/three-month-preparation-kit-breaking-best-and-worst-records/problem?h_l=interview&amp;isFullScreen=true&amp;playlist_slugs%5B%5D%5B%5D=preparation-kits&amp;playlist_slugs%5B%5D%5B%5D=three-month-preparation-kit&amp;playlist_slugs%5B%5D%5B%5D=three-month-week-one">Breaking the Records | HackerRank</a></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">breakingRecords</span>(<span class="params"><span class="attr">scores</span>: <span class="built_in">number</span>[]</span>): <span class="built_in">number</span>[] &#123;</span><br><span class="line">    <span class="comment">// Write your code here</span></span><br><span class="line">    <span class="keyword">let</span> minRecord = scores[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">let</span> maxRecord = scores[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">let</span> minCount = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> maxCount = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i =<span class="number">0</span>;i&lt;scores.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(scores[i] &gt; maxRecord)&#123;</span><br><span class="line">           maxRecord = scores[i]</span><br><span class="line">           maxCount ++</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(scores[i] &lt; minRecord)&#123;</span><br><span class="line">            minRecord = scores[i]</span><br><span class="line">            minCount++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [maxCount,minCount]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.hackerrank.com/challenges/three-month-preparation-kit-breaking-best-and-worst-records/problem?h_l=interview&amp;amp;isFu</summary>
      
    
    
    
    <category term="HackerRank三个月挑战" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/"/>
    
    <category term="第一周" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>Time Conversion</title>
    <link href="https://0922wx.github.io/2024/10/07/Time-Conversion/"/>
    <id>https://0922wx.github.io/2024/10/07/Time-Conversion/</id>
    <published>2024-10-07T07:07:42.000Z</published>
    <updated>2024-10-07T07:14:13.378Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.hackerrank.com/challenges/three-month-preparation-kit-time-conversion/problem?h_l=interview&amp;isFullScreen=true&amp;playlist_slugs%5B%5D%5B%5D=preparation-kits&amp;playlist_slugs%5B%5D%5B%5D=three-month-preparation-kit&amp;playlist_slugs%5B%5D%5B%5D=three-month-week-one">Time Conversion | HackerRank</a></p><p>给定12小时AM/PM格式的时间，将其转换为军用（24 小时）时间。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">timeConversion</span>(<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="comment">// Write your code here</span></span><br><span class="line">   <span class="keyword">let</span> [hours,minutes,seconds] = s.<span class="title function_">split</span>(<span class="string">&quot;:&quot;</span>)</span><br><span class="line">    <span class="keyword">const</span> period = seconds.<span class="title function_">slice</span>(-<span class="number">2</span>) <span class="comment">//AM or PM</span></span><br><span class="line">    seconds = seconds.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">2</span>); </span><br><span class="line">    hours = <span class="built_in">parseInt</span>(hours)  </span><br><span class="line">    <span class="keyword">if</span>(period === <span class="string">&#x27;AM&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(hours === <span class="number">12</span>)&#123;</span><br><span class="line">            hours = <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(hours !== <span class="number">12</span>)&#123;</span><br><span class="line">                hours +=<span class="number">12</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">const</span> militratHours = <span class="title class_">String</span>(hours).<span class="title function_">padStart</span>(<span class="number">2</span>,<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;militratHours&#125;</span>:<span class="subst">$&#123;minutes&#125;</span>:<span class="subst">$&#123;seconds&#125;</span>`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.hackerrank.com/challenges/three-month-preparation-kit-time-conversion/problem?h_l=interview&amp;amp;isFullScreen=true&amp;am</summary>
      
    
    
    
    <category term="HackerRank三个月挑战" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/"/>
    
    <category term="第一周" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>Mini-Max Sum</title>
    <link href="https://0922wx.github.io/2024/10/07/Mini-Max-Sum/"/>
    <id>https://0922wx.github.io/2024/10/07/Mini-Max-Sum/</id>
    <published>2024-10-07T07:07:09.000Z</published>
    <updated>2024-10-07T07:12:27.873Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.hackerrank.com/challenges/three-month-preparation-kit-mini-max-sum/problem">Mini-Max Sum | HackerRank</a></p><p>给定 5 个正整数，求 5 个整数中 4 个整数相加的最小值和最大值。然后将各自的最小值和最大值打印为一行两个空格分隔的长整数。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">miniMaxSum</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="comment">// Write your code here</span></span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">Max</span> = <span class="title class_">Math</span>.<span class="title function_">max</span>(...arr)</span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">Min</span> = <span class="title class_">Math</span>.<span class="title function_">min</span>(...arr)</span><br><span class="line">    <span class="keyword">let</span> sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> arr) &#123;</span><br><span class="line">        sum += item</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> minimun = sum - <span class="title class_">Max</span></span><br><span class="line">    <span class="keyword">let</span> maximum = sum - <span class="title class_">Min</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(minimun,maximum)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.hackerrank.com/challenges/three-month-preparation-kit-mini-max-sum/problem&quot;&gt;Mini-Max Sum | HackerRank&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给定 </summary>
      
    
    
    
    <category term="HackerRank三个月挑战" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/"/>
    
    <category term="第一周" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>Lonely Integer</title>
    <link href="https://0922wx.github.io/2024/10/07/Lonely-Integer/"/>
    <id>https://0922wx.github.io/2024/10/07/Lonely-Integer/</id>
    <published>2024-10-07T05:56:25.000Z</published>
    <updated>2024-10-07T07:05:06.513Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.hackerrank.com/challenges/three-month-preparation-kit-lonely-integer/problem?isFullScreen=true&amp;h_l=interview&amp;playlist_slugs%5B%5D=preparation-kits&amp;playlist_slugs%5B%5D=three-month-preparation-kit&amp;playlist_slugs%5B%5D=three-month-week-two">Lonely Integer | HackerRank</a></p><p>给定一个整数数组，其中除一个元素外所有元素都出现两次，请找出唯一的元素。</p><p>用set做</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">lonelyinteger</span>(<span class="params"><span class="attr">a</span>: <span class="built_in">number</span>[]</span>): <span class="built_in">number</span> &#123;</span><br><span class="line">    <span class="comment">// Write your code here</span></span><br><span class="line">    <span class="keyword">const</span> numSet =<span class="keyword">new</span> <span class="title class_">Set</span>&lt;<span class="built_in">number</span>&gt;()</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> num <span class="keyword">of</span> a)&#123;</span><br><span class="line">        <span class="keyword">if</span>(numSet.<span class="title function_">has</span>(num))&#123;</span><br><span class="line">            numSet.<span class="title function_">delete</span>(num)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            numSet.<span class="title function_">add</span>(num)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Array</span>.<span class="title function_">from</span>(numSet)[<span class="number">0</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.hackerrank.com/challenges/three-month-preparation-kit-lonely-integer/problem?isFullScreen=true&amp;amp;h_l=interview&amp;amp</summary>
      
    
    
    
    <category term="HackerRank三个月挑战" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/"/>
    
    <category term="第二周" scheme="https://0922wx.github.io/categories/HackerRank%E4%B8%89%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/%E7%AC%AC%E4%BA%8C%E5%91%A8/"/>
    
    
  </entry>
  
</feed>
